from mrjob.job import MRJob
from mrjob.step import MRStep
import time


class MRTop10MoviesYear(MRJob):

    def mapper(self, _, line):
        user_id, movie_id, rating, timestamp = line.strip().split(',')
        if not user_id.isdigit():
            return
        year = time.localtime(int(timestamp)).tm_year
        yield (year, (int(movie_id), rating))
    
    def reducer(self, year, pairs):
        table = {}
        for movie_id, rating in pairs:
            if movie_id in table:
                table[movie_id]+=1
            else:
                table[movie_id] = 1
        top10 = sorted(table.keys(), key=lambda k:table[k], reverse=True)[:10]
        yield year, top10

    def steps(self):
        return [
            MRStep(
                mapper=self.mapper,
                reducer=self.reducer),
        ]


if __name__ == '__main__':
    MRTop10MoviesYear.run()
    
